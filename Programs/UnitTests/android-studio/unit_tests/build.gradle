apply plugin: 'com.android.application'
import org.gradle.internal.os.OperatingSystem;

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId 'com.dava.unittests'
        minSdkVersion 14
        targetSdkVersion 25

        externalNativeBuild {
            ndkBuild {
                arguments '-j', '8'
                if (OperatingSystem.current().isWindows()) {
                    arguments.add('APP_SHORT_COMMANDS=true')
                }
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path '../../android/jni/Android.mk'
        }
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi-v7a" // "x86", "armeabi-v7a", "mips"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
            jniDebuggable true
        }
    }

    productFlavors {
        fat {
            dimension 'abi'
            externalNativeBuild {
                ndkBuild {
                    abiFilters 'armeabi-v7a', 'x86'
                }
            }
        }

        armv7a {
            dimension 'abi'
            externalNativeBuild {
                ndkBuild {
                    abiFilters 'armeabi-v7a'
                }
            }
        }

        x86 {
            dimension 'abi'
            externalNativeBuild {
                ndkBuild {
                    abiFilters 'x86'
                }
            }
        }
    }

    sourceSets.main {
        java.srcDirs = ['../../android/src/']
        res.srcDirs = ['../../android/res/']
        aidl.srcDirs = ['../../android/src/']
        assets.srcDirs = ['../../android/assets/']
        jniLibs.srcDirs = ['../../android/libs/', "${android.ndkDirectory}/sources/crystax/libs/"]
        manifest.srcFile '../../android/AndroidManifest.xml'
    }
}

dependencies {
    compile project(':AndroidFramework')
}

